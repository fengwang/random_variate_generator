A random variate generator consists of two parts: an engine class that produces a series of pseudo-numbers, a distribution class that uses the given engine to produce the variate.
For a very quick start, here is an example(can be found in file example/gaussian_test.cc):
//--------------------------------------------------------------
#include <vg.hpp>
#include <cmath>
#include <map>
#include <iostream>

using namespace vg;
using namespace std;

int main()
{
    variate_generator<double, gaussian, vg::mt19937> vg(0, 4);    
    map< int, int > sample;

    for ( auto i = vg.begin(); i != vg.begin()+500; ++i )
        sample[round(*i)]++;

    for ( auto i = sample.begin(); i != sample.end(); ++i )
    {
        cout << "\n" << (*i).first << "\t";
        for ( auto j = 0; j < (*i).second; ++j ) cout << "*";
    }

    return 0;
}
//--------------------------------------------------------------
To compile it, we use 
//--------------------------------------------------------------
g++ -o bin/gaussian_test example/gaussian_test.cc -std=c++0x -O2 -Iinclude
//--------------------------------------------------------------
To run it, we get :
//--------------------------------------------------------------
-16 *
-13 ***
-12 ***
-11 ***
-10 *
-9  ********
-8  *********
-7  **************
-6  ************
-5  ******************
-4  **************************
-3  *********************************
-2  ******************************************
-1  ****************************************************
0   **************************************************
1   **************************************************
2   **********************************************
3   ******************************
4   ************************
5   *******************
6   ****************
7   **************
8   ******
9   ****
10  **
11  ******
12  *****
14  *
15  *
16  *
//--------------------------------------------------------------

